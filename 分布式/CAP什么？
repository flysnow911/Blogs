# CAP模型
### C: 一致性
多节点部署，各节点数据都是最新的。

### A: 可用性
每次响应都能返回非错的数据。

### P: 分区容错性
分区：多节点部署的情况下，节点之间会发生网络分区，即通信不可，比如宕机，拔网线。
分区容错是指分布式系统能够容忍发生部分节点宕机，断网的情况发生，并且这种网络分区在实际情况下是不可避免的。

# 为什么三者不能同时满足？
首先网络分区是不可避免要发生的，所以P是一定要满足的。
从CA的定义上看，AC是矛盾的。
要保证C，多节点之间就要同步数据，同步数据这段时间，就不可用了（因为返回的不是非错的数据），就保证不了A。
要保证A，总是返回非错的数据，就不能有同步数据，对外不可用的时间段发生。

# 典型的CP,AP模型有哪些？
Zookeeper: CP模型，但不是特别严格。
Eureka: AP模型。
基于Redis的分布式锁：AP。
基于ZK，ETCD的分布式锁：CP。

# AP,CP适用什么业务场景？
金融系统，银行系统，与钱相关的更多的采用CP模型。
FEED，类的更适用AP模型。
